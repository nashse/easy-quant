package com.zyf.common.model.future;

import lombok.Data;

import java.math.BigDecimal;
import java.util.Date;

@Data
public class BitMEXInstrument {
    private String symbol;    // "XBTZ14",
    private String rootSymbol;    // "XBT",
    private String state;    // "Settled",
    private String typ;    // "FXXXS",
    private Date listing;    // "2014-11-21T20;    //00;    //00.000Z",
    private Date front;    // "2014-11-28T12;    //00;    //00.000Z",
    private Date expiry;    // "2014-12-26T12;    //00;    //00.000Z",
    private Date settle;    // "2014-12-26T12;    //00;    //00.000Z",
    private String relistInterval;    // null,
    private String inverseLeg;    // "",
    private String sellLeg;    // "",
    private String buyLeg;    // "",
    private String optionStrikePcnt;    // null,
    private String optionStrikeRound;    // null,
    private String optionStrikePrice;    // null,
    private String optionMultiplier;    // null,
    private String positionCurrency;    // "",
    private String underlying;    // "XBT",
    private String quoteCurrency;    // "USD",
    private String underlyingSymbol;    // "XBT=",
    private String reference;    // "BMEX",
    private String referenceSymbol;    // ".XBT2H",
    private String calcInterval;    // null,
    private String publishInterval;    // null,
    private String publishTime;    // null,
    private BigDecimal maxOrderQty;    // 10000000,
    private BigDecimal maxPrice;    // 1000000,
    private Integer lotSize;    // 1,
    private BigDecimal tickSize;    // 0.01,
    private BigDecimal multiplier;    // 1000,
    private String settlCurrency;    // "XBt",
    private BigDecimal underlyingToPositionMultiplier;    // null,
    private BigDecimal underlyingToSettleMultiplier;    // 100000000,
    private BigDecimal quoteToSettleMultiplier;    // null,
    private Boolean isQuanto;    // true,
    private Boolean isInverse;    // false,
    private BigDecimal initMargin;    // 0.3,
    private BigDecimal maintMargin;    // 0.2,
    private BigDecimal riskLimit;    // 25000000000,
    private BigDecimal riskStep;    // 5000000000,
    private BigDecimal limit;    // 0.2,
    private Boolean capped;    // false,
    private Boolean taxed;    // false,
    private Boolean deleverage;    // false,
    private BigDecimal makerFee;    // 0.00005,
    private BigDecimal takerFee;    // 0.00005,
    private BigDecimal settlementFee;    // 0.00005,
    private BigDecimal insuranceFee;    // 0.00015,
    private String fundingBaseSymbol;    // "",
    private String fundingQuoteSymbol;    // "",
    private String fundingPremiumSymbol;    // "",
    private Date fundingTimestamp;    // null,
    private Long fundingInterval;    // null,
    private BigDecimal fundingRate;    // null,
    private BigDecimal indicativeFundingRate;    // null,
    private Long rebalanceTimestamp;    // null,
    private BigDecimal rebalanceInterval;    // null,
    private Date openingTimestamp;    // "2014-12-26T12;    //00;    //00.000Z",
    private Date closingTimestamp;    // "2014-12-26T12;    //00;    //00.000Z",
    private Date sessionInterval;    // "2000-01-01T08;    //00;    //00.000Z",
    private BigDecimal prevClosePrice;    // 319,
    private BigDecimal limitDownPrice;    // 255.2,
    private BigDecimal limitUpPrice;    // 382.8,
    private BigDecimal bankruptLimitDownPrice;    // null,
    private BigDecimal bankruptLimitUpPrice;    // null,
    private BigDecimal prevTotalVolume;    // 323564,
    private BigDecimal totalVolume;    // 348271,
    private BigDecimal volume;    // 0,
    private BigDecimal volume24h;    // 0,
    private BigDecimal prevTotalTurnover;    // 0,
    private BigDecimal totalTurnover;    // 0,
    private BigDecimal turnover;    // 0,
    private BigDecimal turnover24h;    // 0,
    private BigDecimal prevPrice24h;    // 323.33,
    private String vwap;    // null,
    private BigDecimal highPrice;    // null,
    private BigDecimal lowPrice;    // null,
    private BigDecimal lastPrice;    // 323.33,
    private BigDecimal lastPriceProtected;    // 323.33,
    private String lastTickDirection;    // "PlusTick",
    private BigDecimal lastChangePcnt;    // 0,
    private BigDecimal bidPrice;    // null,
    private BigDecimal midPrice;    // null,
    private BigDecimal askPrice;    // null,
    private BigDecimal impactBidPrice;    // null,
    private BigDecimal impactMidPrice;    // null,
    private BigDecimal impactAskPrice;    // null,
    private Boolean hasLiquidity;    // false,
    private BigDecimal openInterest;    // 0,
    private BigDecimal openValue;    // 0,
    private String fairMethod;    // "",
    private BigDecimal fairBasisRate;    // null,
    private BigDecimal fairBasis;    // 0,
    private BigDecimal fairPrice;    // 323.33,
    private String markMethod;    // "LastPrice",
    private BigDecimal markPrice;    // 323.33,
    private BigDecimal indicativeTaxRate;    // null,
    private BigDecimal indicativeSettlePrice;    // 323.33,
    private BigDecimal optionUnderlyingPrice;    // null,
    private BigDecimal settledPrice;    // 323.33,
    private Date timestamp;    // "2014-11-21T21;    //00;    //02.409Z"
}
